/*! For license information please see viewer.js.LICENSE.txt */
(()=>{"use strict";class t{static unpack(t){}}class e{static unpack(t){}}class i{static unpack(t){}}class s{static crctable=new Int32Array(256);static CRC32_POLYNOMIAL=3988292384;static bitmask=new Uint32Array(33);static{for(let t=0;t<32;t++)s.bitmask[t]=(1<<t)-1;s.bitmask[32]=4294967295;for(let t=0;t<256;t++){let e=t;for(let t=0;t<8;t++)1==(1&e)?e=e>>>1^s.CRC32_POLYNOMIAL:e>>>=1;s.crctable[t]=e}}data;pos;bitPos=0;constructor(t){if(!t)throw new Error("Input src packet array was null!");this.data=t,this.pos=0}static alloc=t=>new s(0===t?new Uint8Array(100):1===t?new Uint8Array(5e3):new Uint8Array(3e4));get g1(){return this.data[this.pos++]}get g1b(){return this.data[this.pos++]<<24>>24}get g2(){return(this.data[this.pos++]<<8|this.data[this.pos++])>>>0}get g2s(){return this.data[this.pos++]<<8|this.data[this.pos++]}get g3(){return(this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++])>>>0}get g4(){return(this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++])>>>0}get g4s(){return this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++]}get g8(){return BigInt(this.g4)<<32n|BigInt(this.g4)}get gsmart(){return this.data[this.pos]<128?this.g1:this.g2-32768}get gsmarts(){return this.data[this.pos]<128?this.g1-64:this.g2-49152}get gjstr(){let t="";for(;10!=this.data[this.pos]&&this.pos<this.data.length;)t+=String.fromCharCode(this.data[this.pos++]);return this.pos++,t}gdata=(t,e)=>this.data.subarray(t,t+e);p1=t=>{this.data[this.pos++]=t};p2=t=>{this.data[this.pos++]=t>>>8,this.data[this.pos++]=t};ip2=t=>{this.data[this.pos++]=t,this.data[this.pos++]=t>>>8};p3=t=>{this.data[this.pos++]=t>>>16,this.data[this.pos++]=t>>>8,this.data[this.pos++]=t};p4=t=>{this.data[this.pos++]=t>>>24,this.data[this.pos++]=t>>>16,this.data[this.pos++]=t>>>8,this.data[this.pos++]=t};ip4=t=>{this.data[this.pos++]=t,this.data[this.pos++]=t>>>8,this.data[this.pos++]=t>>>16,this.data[this.pos++]=t>>>24};p8=t=>{this.p4(Number(t>>32n)),this.p4(Number(0xffffffffn&t))};pjstr=t=>{for(let e=0;e<t.length;e++)this.data[this.pos++]=t.charCodeAt(e);this.data[this.pos++]=10};pdata=(t,e,i)=>{for(let s=i;s<i+e;s++)this.data[this.pos++]=t[s]};psize1=t=>{this.data[this.pos-t-1]=t};bits=()=>{this.bitPos=8*this.pos};bytes=()=>{this.pos=(this.bitPos+7)/8>>>0};gBit=t=>{let e=this.bitPos>>>3,i=8-(7&this.bitPos),r=0;for(this.bitPos+=t;t>i;i=8)r+=(this.data[e++]&s.bitmask[i])<<t-i,t-=i;return r+=t==i?this.data[e]&s.bitmask[i]:this.data[e]>>>i-t&s.bitmask[t],r}}class r{static count=0;static instances=[];static unpack=t=>{let e=new s(t.read("flo.dat"));r.count=e.g2;for(let t=0;t<r.count;t++)r.instances[t]=new r,r.instances[t].decode(e)};static get=t=>r.instances[t];rgb=0;texture=-1;opcode3=!1;occludes=!0;name=null;decode=t=>{for(;;){let e=t.g1;if(0===e)break;1===e?this.rgb=t.g3:2===e?this.texture=t.g1:3===e?this.opcode3=!0:5===e?this.occludes=!1:6===e?this.name=t.gjstr:console.log("Error unrecognised config code: ",e)}}}class a{static unpack(t){}}class n{static unpack(t){}}class o{static unpack(t){}}class l{static unpack(t){}}class h{static unpack(t){}}class c{static unpack(t){}}class f{static pixels=new Uint32Array;static width=0;static height=0;static top=0;static bottom=0;static left=0;static right=0;static boundX=0;static centerX=0;static centerY=0;static prepare=(t,e,i)=>{this.pixels=t,this.width=e,this.height=i,this.setBounds(0,0,e,i)};static setBounds=(t,e,i,s)=>{t<0&&(t=0),e<0&&(e=0),i>this.width&&(i=this.width),s>this.height&&(s=this.height),this.top=e,this.bottom=s,this.left=t,this.right=i,this.boundX=this.right-1,this.centerX=this.right/2,this.centerY=this.bottom/2};static clear=()=>{this.pixels.fill(0)};static drawRect=(t,e,i,s,r)=>{let a=this.pixels,n=t,o=e,l=t+i,h=e+s;n<this.left&&(n=this.left),o<this.top&&(o=this.top),l>this.right&&(l=this.right),h>this.bottom&&(h=this.bottom);let c=this.width;for(let t=n;t<l;t++){let e=t+o*c;a[e]=r,e=t+(h-1)*c,a[e]=r}for(let t=o;t<h;t++){let e=n+t*c;a[e]=r,e=l-1+t*c,a[e]=r}};static fillRect=(t,e,i,s,r)=>{let a=this.pixels,n=t,o=e,l=t+i,h=e+s;n<this.left&&(n=this.left),o<this.top&&(o=this.top),l>this.right&&(l=this.right),h>this.bottom&&(h=this.bottom);let c=this.width;for(let t=o;t<h;t++){let e=n+t*c;a.fill(r,e,e+(l-n))}}}class u{pixels;width;height;cropX;cropY;cropW;cropH;palette=null;constructor(t,e){this.pixels=new Uint8Array(t*e),this.width=this.cropW=t,this.height=this.cropH=e,this.cropX=this.cropY=0}static fromArchive=(t,e,i=0)=>{let r=new s(t?.read(e+".dat")),a=new s(t?.read("index.dat"));a.pos=r.g2;let n=a.g2,o=a.g2,l=a.g1,h=new Uint32Array(l);for(let t=0;t<l-1;t++)h[t+1]=a.g3,0===h[t+1]&&(h[t+1]=1);for(let t=0;t<i;t++)a.pos+=2,r.pos+=a.g2*a.g2,a.pos+=1;let c=a.g1,f=a.g1,p=a.g2,d=a.g2,x=new u(p,d);x.cropX=c,x.cropY=f,x.cropW=n,x.cropH=o,x.palette=h;let m=a.g1;if(0===m){const t=x.width*x.height;for(let e=0;e<t;e++)x.pixels[e]=r.g1}else if(1===m){const t=x.width;for(let e=0;e<t;e++){const i=x.height;for(let s=0;s<i;s++)x.pixels[e+s*t]=r.g1}}return x};draw=(t,e,i=-1,s=-1)=>{t|=0,e|=0;let r=(t+=this.cropX)+(e+=this.cropY)*f.width,a=0,n=this.height,o=this.width;-1!==i&&(o=i),-1!==s&&(n=s);let l=f.width-o,h=0;if(e<f.top){let t=f.top-e;n-=t,e=f.top,a+=t*o,r+=t*f.width}if(e+n>f.bottom&&(n-=e+n-f.bottom),t<f.left){let e=f.left-t;o-=e,t=f.left,a+=e,r+=e,h+=e,l+=e}if(t+o>f.right){let e=t+o-f.right;o-=e,h+=e,l+=e}o>0&&n>0&&this.copyImage(o,n,this.pixels,a,h,f.pixels,r,l)};copyImage=(t,e,i,s,r,a,n,o)=>{if(null!==i&&null!==a&&null!==this.palette)for(let l=0;l<e;l++){for(let e=0;e<t;e++){let r=e+l*t,o=i[s+r];0!=o&&(a[n+r]=this.palette[o])}s+=r,n+=o}}}class p{static reciprocal15=new Int32Array(512);static reciprocal16=new Int32Array(2048);static sin=new Int32Array(2048);static cos=new Int32Array(2048);static palette=new Uint32Array(65536);static textures=[];static textureCount=0;static lineOffset=null;static centerX=0;static centerY=0;static jagged=!0;static clipX=!1;static alpha=0;static{for(let t=1;t<512;t++)p.reciprocal15[t]=32768/t;for(let t=1;t<2048;t++)p.reciprocal16[t]=65536/t;for(let t=0;t<2048;t++)p.sin[t]=Math.trunc(65536*Math.sin(.0030679615757712823*t)),p.cos[t]=Math.trunc(65536*Math.cos(.0030679615757712823*t))}static init2D(){p.lineOffset=new Int32Array(f.height);for(let t=0;t<f.height;t++)p.lineOffset[t]=f.width*t;this.centerX=f.width/2,this.centerY=f.height/2}static unpackTextures(t){p.textureCount=0;for(let e=0;e<50;e++)try{p.textures[e]=u.fromArchive(t,e.toString()),p.textureCount++}catch(t){}}static setBrightness(t){t+=.3*Math.random()-.15;let e=0;for(let i=0;i<512;i++){let s=i/8/64+.0078125,r=(7&i)/8+.0625;for(let i=0;i<128;i++){let a=i/128,n=a,o=a,l=a;if(r){let t;t=a<.5?a*(1+r):a+r-a*r;let e=2*a-t,i=s+.3333333333333333;i>1&&i--;let h=s-.3333333333333333;h<0&&h++,n=6*i<1?e+6*(t-e)*i:2*i<1?t:3*i<2?e+6*(.6666666666666666-i)*(t-e):e,o=6*s<1?e+6*(t-e)*s:2*s<1?t:3*s<2?e+6*(.6666666666666666-s)*(t-e):e,l=6*h<1?e+6*(t-e)*h:2*h<1?t:3*h<2?e+6*(.6666666666666666-h)*(t-e):e}let h=Math.trunc(256*n)<<16|Math.trunc(256*o)<<8|Math.trunc(256*l);h=p.setGamma(h,t),0===h&&(h=1),p.palette[e++]=h}}}static setGamma(t,e){let i=(t>>16)/256,s=(t>>8&255)/256,r=(255&t)/256;return i=Math.pow(i,e),s=Math.pow(s,e),r=Math.pow(r,e),Math.trunc(256*i)<<16|Math.trunc(256*s)<<8|Math.trunc(256*r)}static initPool(){}static fillGouraudTriangle(t,e,i,s,r,a,n,o,l){let h=0,c=0,u=0,d=0,x=0,m=0;if(r!=s&&(h=(e-t<<16)/(r-s),d=(o-n<<15)/(r-s)),a!=r&&(c=(i-e<<16)/(a-r),x=(l-o<<15)/(a-r)),a!=s&&(u=(t-i<<16)/(s-a),m=(n-l<<15)/(s-a)),s<=r&&s<=a){if(s>=f.bottom)return;if(r>f.bottom&&(r=f.bottom),a>f.bottom&&(a=f.bottom),r<a){if(i=t<<=16,l=n<<=15,s<0&&(i-=u*s,t-=h*s,l-=m*s,n-=d*s,s=0),e<<=16,o<<=15,r<0&&(e-=c*r,o-=x*r,r=0),s!=r&&u<h||s==r&&u>c){for(a-=r,r-=s,s=p.lineOffset[s];--r>=0;s+=f.width)this.drawGouraudScanline(f.pixels,s,i>>16,t>>16,l>>7,n>>7),i+=u,t+=h,l+=m,n+=d;for(;--a>=0;)this.drawGouraudScanline(f.pixels,s,i>>16,e>>16,l>>7,o>>7),i+=u,e+=c,l+=m,o+=x,s+=f.width;return}for(a-=r,r-=s,s=p.lineOffset[s];--r>=0;s+=f.width)this.drawGouraudScanline(f.pixels,s,t>>16,i>>16,n>>7,l>>7),i+=u,t+=h,l+=m,n+=d;for(;--a>=0;)this.drawGouraudScanline(f.pixels,s,e>>16,i>>16,o>>7,l>>7),i+=u,e+=c,l+=m,o+=x,s+=f.width;return}if(e=t<<=16,o=n<<=15,s<0&&(e-=u*s,t-=h*s,o-=m*s,n-=d*s,s=0),i<<=16,l<<=15,a<0&&(i-=c*a,l-=x*a,a=0),s!=a&&u<h||s==a&&c>h){for(r-=a,a-=s,s=p.lineOffset[s];--a>=0;s+=f.width)this.drawGouraudScanline(f.pixels,s,e>>16,t>>16,o>>7,n>>7),e+=u,t+=h,o+=m,n+=d;for(;--r>=0;)this.drawGouraudScanline(f.pixels,s,i>>16,t>>16,l>>7,n>>7),i+=c,t+=h,l+=x,n+=d,s+=f.width;return}for(r-=a,a-=s,s=p.lineOffset[s];--a>=0;s+=f.width)this.drawGouraudScanline(f.pixels,s,t>>16,e>>16,n>>7,o>>7),e+=u,t+=h,o+=m,n+=d;for(;--r>=0;)this.drawGouraudScanline(f.pixels,s,t>>16,i>>16,n>>7,l>>7),i+=c,t+=h,l+=x,n+=d,s+=f.width}else if(r<=a){if(r>=f.bottom)return;if(a>f.bottom&&(a=f.bottom),s>f.bottom&&(s=f.bottom),a<s){if(t=e<<=16,n=o<<=15,r<0&&(t-=h*r,e-=c*r,n-=d*r,o-=x*r,r=0),i<<=16,l<<=15,a<0&&(i-=u*a,l-=m*a,a=0),r!=a&&h<c||r==a&&h>u){for(s-=a,a-=r,r=p.lineOffset[r];--a>=0;r+=f.width)this.drawGouraudScanline(f.pixels,r,t>>16,e>>16,n>>7,o>>7),t+=h,e+=c,n+=d,o+=x;for(;--s>=0;)this.drawGouraudScanline(f.pixels,r,t>>16,i>>16,n>>7,l>>7),t+=h,i+=u,n+=d,l+=m,r+=f.width;return}for(s-=a,a-=r,r=p.lineOffset[r];--a>=0;r+=f.width)this.drawGouraudScanline(f.pixels,r,e>>16,t>>16,o>>7,n>>7),t+=h,e+=c,n+=d,o+=x;for(;--s>=0;)this.drawGouraudScanline(f.pixels,r,i>>16,t>>16,l>>7,n>>7),t+=h,i+=u,n+=d,l+=m,r+=f.width;return}if(i=e<<=16,l=o<<=15,r<0&&(i-=h*r,e-=c*r,l-=d*r,o-=x*r,r=0),t<<=16,n<<=15,s<0&&(t-=u*s,n-=m*s,s=0),h<c){for(a-=s,s-=r,r=p.lineOffset[r];--s>=0;r+=f.width)this.drawGouraudScanline(f.pixels,r,i>>16,e>>16,l>>7,o>>7),i+=h,e+=c,l+=d,o+=x;for(;--a>=0;)this.drawGouraudScanline(f.pixels,r,t>>16,e>>16,n>>7,o>>7),t+=u,e+=c,n+=m,o+=x,r+=f.width;return}for(a-=s,s-=r,r=p.lineOffset[r];--s>=0;r+=f.width)this.drawGouraudScanline(f.pixels,r,e>>16,i>>16,o>>7,l>>7),i+=h,e+=c,l+=d,o+=x;for(;--a>=0;)this.drawGouraudScanline(f.pixels,r,e>>16,t>>16,o>>7,n>>7),t+=u,e+=c,n+=m,o+=x,r+=f.width}else if(!(a>=f.bottom))if(s>f.bottom&&(s=f.bottom),r>f.bottom&&(r=f.bottom),s<r){if(e=i<<=16,o=l<<=15,a<0&&(e-=c*a,i-=u*a,o-=x*a,l-=m*a,a=0),t<<=16,n<<=15,s<0&&(t-=h*s,n-=d*s,s=0),c<u){for(r-=s,s-=a,a=p.lineOffset[a];--s>=0;a+=f.width)this.drawGouraudScanline(f.pixels,a,e>>16,i>>16,o>>7,l>>7),e+=c,i+=u,o+=x,l+=m;for(;--r>=0;)this.drawGouraudScanline(f.pixels,a,e>>16,t>>16,o>>7,n>>7),e+=c,t+=h,o+=x,n+=d,a+=f.width;return}for(r-=s,s-=a,a=p.lineOffset[a];--s>=0;a+=f.width)this.drawGouraudScanline(f.pixels,a,i>>16,e>>16,l>>7,o>>7),e+=c,i+=u,o+=x,l+=m;for(;--r>=0;)this.drawGouraudScanline(f.pixels,a,t>>16,e>>16,n>>7,o>>7),e+=c,t+=h,o+=x,n+=d,a+=f.width}else if(t=i<<=16,n=l<<=15,a<0&&(t-=c*a,i-=u*a,n-=x*a,l-=m*a,a=0),e<<=16,o<<=15,r<0&&(e-=h*r,o-=d*r,r=0),c<u){for(s-=r,r-=a,a=p.lineOffset[a];--r>=0;a+=f.width)this.drawGouraudScanline(f.pixels,a,t>>16,i>>16,n>>7,l>>7),t+=c,i+=u,n+=x,l+=m;for(;--s>=0;)this.drawGouraudScanline(f.pixels,a,e>>16,i>>16,o>>7,l>>7),e+=h,i+=u,o+=d,l+=m,a+=f.width}else{for(s-=r,r-=a,a=p.lineOffset[a];--r>=0;a+=f.width)this.drawGouraudScanline(f.pixels,a,i>>16,t>>16,l>>7,n>>7),t+=c,i+=u,n+=x,l+=m;for(;--s>=0;)this.drawGouraudScanline(f.pixels,a,i>>16,e>>16,l>>7,o>>7),e+=h,i+=u,o+=d,l+=m,a+=f.width}}static drawGouraudScanline(t,e,i,s,r,a){let n=0,o=0;if(p.jagged){let l=0;if(p.clipX){if(l=s-i>3?(a-r)/(s-i):0,s>f.right&&(s=f.right),i<0&&(r-=i*l,i=0),i>=s)return;e+=i,o=s-i>>2,l<<=2}else{if(i>=s)return;e+=i,o=s-i>>2,l=o>0?(a-r)*p.reciprocal15[o]>>15:0}if(0==p.alpha){for(;--o>=0;)n=p.palette[r>>8],r+=l,t[e++]=n,t[e++]=n,t[e++]=n,t[e++]=n;if(o=s-i&3,o>0){n=p.palette[r>>8];do{t[e++]=n}while(--o>0);return}}else{let a=p.alpha,h=256-p.alpha;for(;--o>=0;)n=p.palette[r>>8],r+=l,n=((16711935&n)*h>>8&16711935)+((65280&n)*h>>8&65280),t[e++]=n+((16711935&t[e])*a>>8&16711935)+((65280&t[e])*a>>8&65280),t[e++]=n+((16711935&t[e])*a>>8&16711935)+((65280&t[e])*a>>8&65280),t[e++]=n+((16711935&t[e])*a>>8&16711935)+((65280&t[e])*a>>8&65280),t[e++]=n+((16711935&t[e])*a>>8&16711935)+((65280&t[e])*a>>8&65280);if(o=s-i&3,o>0){n=p.palette[r>>8],n=((16711935&n)*h>>8&16711935)+((65280&n)*h>>8&65280);do{t[e++]=n+((16711935&t[e])*a>>8&16711935)+((65280&t[e])*a>>8&65280)}while(--o>0)}}return}if(i>=s)return;let l=(a-r)/(s-i);if(p.clipX&&(s>f.right&&(s=f.right),i<0&&(r-=i*l,i=0),i>=s))return;if(e+=i,o=s-i,0==p.alpha){do{t[e++]=p.palette[r>>8],r+=l}while(--o>0);return}let h=p.alpha,c=256-p.alpha;do{n=p.palette[r>>8],r+=l,n=((16711935&n)*c>>8&16711935)+((65280&n)*c>>8&65280),t[e++]=n+((16711935&t[e])*h>>8&16711935)+((65280&t[e])*h>>8&65280)}while(--o>0)}static fillTriangle(){}static fillTexturedTriangle(){}}class d{static CHARSET=[];static{let t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!\"£$%^&*()-_=+[{]};:'@#~,<.>/?\\| ";for(let e=0;e<256;e++){let i=t.indexOf(String.fromCharCode(e));-1===i&&(i=74),d.CHARSET[e]=i}}pixels=[];charWidth=[];charHeight=[];clipX=[];clipY=[];charSpace=[];drawWidth=[];fontHeight=-1;static fromArchive=(t,e)=>{const i=new s(t.read(e+".dat")),r=new s(t.read("index.dat"));r.pos=i.g2+4;let a=r.g1;a>0&&(r.pos+=3*(a-1));const n=new d;for(let t=0;t<94;t++){n.clipX[t]=r.g1,n.clipY[t]=r.g1;const e=n.charWidth[t]=r.g2,s=n.charHeight[t]=r.g2,a=e*s;n.pixels[t]=new Uint8Array(a);const o=r.g1;if(0===o)for(let r=0;r<e*s;r++)n.pixels[t][r]=i.g1;else if(1===o)for(let r=0;r<e;r++)for(let a=0;a<s;a++)n.pixels[t][r+a*e]=i.g1;s>n.fontHeight&&(n.fontHeight=s),n.clipX[t]=1,n.charSpace[t]=e+2;{let i=0;for(let r=s/7;r<s;r++)i+=n.pixels[t][e+r*e];i<=s/7&&(n.charSpace[t]--,n.clipX[t]=0)}{let i=0;for(let r=s/7;r<s;r++)i+=n.pixels[t][e+r*e-1];i<=s/7&&n.charSpace[t]--}}n.charSpace[94]=n.charSpace[8];for(let t=0;t<256;t++)n.drawWidth[t]=n.charSpace[d.CHARSET[t]];return n};draw=(t,e,i,s)=>{t=Math.trunc(t),e=Math.trunc(e);const r=i.length;e-=this.fontHeight;for(let a=0;a<r;a++){const r=d.CHARSET[i.charCodeAt(a)];94!==r&&this.copyCharacter(t+this.clipX[r],e+this.clipY[r],this.charWidth[r],this.charHeight[r],this.pixels[r],s),t+=this.charSpace[r]}};drawStringTaggable=(t,e,i,s,r)=>{t|=0,e|=0;const a=i.length;e-=this.fontHeight;for(let n=0;n<a;n++)if("@"===i.charAt(n)&&n+4<a&&"@"===i.charAt(n+4))s=this.evaluateTag(i.substring(n+1,n+4)),n+=4;else{const a=d.CHARSET[i.charCodeAt(n)];94!==a&&(r&&this.copyCharacter(t+this.clipX[a]+1,e+this.clipY[a]+1,this.charWidth[a],this.charHeight[a],this.pixels[a],0),this.copyCharacter(t+this.clipX[a],e+this.clipY[a],this.charWidth[a],this.charHeight[a],this.pixels[a],s)),t+=this.charSpace[a]}};getTextWidth=t=>{const e=t.length;let i=0;for(let s=0;s<e;s++)"@"===t.charAt(s)&&s+4<e&&"@"===t.charAt(s+4)?s+=4:i+=this.drawWidth[t.charCodeAt(s)];return i};drawStringTaggableCenter=(t,e,i,s,r)=>{this.drawStringTaggable(t-this.getTextWidth(i)/2,e,i,s,r)};drawStringCenter=(t,e,i,s)=>{this.draw(t-this.getTextWidth(i)/2,e,i,s)};drawRight=(t,e,i,s,r=!0)=>{r&&this.draw(t-this.getTextWidth(i)+1,e+1,i,0),this.draw(t-this.getTextWidth(i),e,i,s)};copyCharacter=(t,e,i,s,r,a)=>{i|=0,s|=0;let n=(t|=0)+(e|=0)*f.width,o=0,l=f.width-i,h=0;if(e<f.top){let t=f.top-e;s-=t,e=f.top,o+=t*i,n+=t*f.width}if(e+s>f.bottom&&(s-=e+s+1-f.bottom),t<f.left){let e=f.left-t;i-=e,t=f.left,o+=e,n+=e,h+=e,l+=e}if(t+i>f.right){let e=t+i+1-f.right;i-=e,h+=e,l+=e}i>0&&s>0&&this.copyImageMasked(i,s,r,o,h,f.pixels,n,l,a)};copyImageMasked=(t,e,i,s,r,a,n,o,l)=>{for(let h=0;h<e;h++){for(let e=0;e<t;e++)0!=i[s++]?a[n++]=l:n++;s+=r,n+=o}};evaluateTag=t=>{switch(t){case"red":return 16711680;case"gre":return 65280;case"blu":return 255;case"yel":return 16776960;case"cya":return 65535;case"mag":return 16711935;case"whi":return 16777215;case"bla":default:return 0;case"lre":return 16748608;case"dre":return 8388608;case"dbl":return 128;case"or1":return 16756736;case"or2":return 16740352;case"or3":return 16723968;case"gr1":return 12648192;case"gr2":return 8453888;case"gr3":return 4259584}}}class x{vertexCount=0;faceCount=0;texturedFaceCount=0;vertexFlagsOffset=-1;vertexXOffset=-1;vertexYOffset=-1;vertexZOffset=-1;vertexLabelsOffset=-1;faceVerticesOffset=-1;faceOrientationsOffset=-1;faceColorsOffset=-1;faceInfosOffset=-1;facePrioritiesOffset=0;faceAlphasOffset=-1;faceLabelsOffset=-1;faceTextureAxisOffset=-1}class m{x=0;y=0;z=0;w=0}class w{static metadata=null;static head=null;static face1=null;static face2=null;static face3=null;static face4=null;static face5=null;static point1=null;static point2=null;static point3=null;static point4=null;static point5=null;static vertex1=null;static vertex2=null;static axis=null;static faceClippedX=new Array(4096);static faceNearClipped=new Array(4096);static vertexScreenX=new Int32Array(4096);static vertexScreenY=new Int32Array(4096);static vertexScreenZ=new Int32Array(4096);static vertexViewSpaceX=new Int32Array(4096);static vertexViewSpaceY=new Int32Array(4096);static vertexViewSpaceZ=new Int32Array(4096);static tmpDepthFaceCount=new Int32Array(1500);static tmpDepthFaces=new Array(1500).fill(null).map((()=>new Int32Array(512)));static tmpPriorityFaceCount=new Int32Array(12);static tmpPriorityFaces=new Array(12).fill(null).map((()=>new Int32Array(2e3)));static tmpPriority10FaceDepth=new Int32Array(2e3);static tmpPriority11FaceDepth=new Int32Array(2e3);static tmpPriorityDepthSum=new Int32Array(12);static clippedX=new Int32Array(10);static clippedY=new Int32Array(10);static clippedColor=new Int32Array(10);static baseX=0;static baseY=0;static baseZ=0;static checkHover=!1;static mouseX=0;static mouseZ=0;static pickedCount=0;static pickedBitsets=new Int32Array(1e3);static unpack(t){try{w.head=new s(t.read("ob_head.dat")),w.face1=new s(t.read("ob_face1.dat")),w.face2=new s(t.read("ob_face2.dat")),w.face3=new s(t.read("ob_face3.dat")),w.face4=new s(t.read("ob_face4.dat")),w.face5=new s(t.read("ob_face5.dat")),w.point1=new s(t.read("ob_point1.dat")),w.point2=new s(t.read("ob_point2.dat")),w.point3=new s(t.read("ob_point3.dat")),w.point4=new s(t.read("ob_point4.dat")),w.point5=new s(t.read("ob_point5.dat")),w.vertex1=new s(t.read("ob_vertex1.dat")),w.vertex2=new s(t.read("ob_vertex2.dat")),w.axis=new s(t.read("ob_axis.dat")),w.head.pos=0,w.point1.pos=0,w.point2.pos=0,w.point3.pos=0,w.point4.pos=0,w.vertex1.pos=0,w.vertex2.pos=0;const e=w.head.g2;w.metadata=new Array(e+100);let i=0,r=0,a=0,n=0,o=0,l=0,h=0;for(let t=0;t<e;t++){const t=w.head.g2,e=new x;e.vertexCount=w.head.g2,e.faceCount=w.head.g2,e.texturedFaceCount=w.head.g1,e.vertexFlagsOffset=w.point1.pos,e.vertexXOffset=w.point2.pos,e.vertexYOffset=w.point3.pos,e.vertexZOffset=w.point4.pos,e.faceVerticesOffset=w.vertex1.pos,e.faceOrientationsOffset=w.vertex2.pos;const s=w.head.g1,c=w.head.g1,f=w.head.g1,u=w.head.g1,p=w.head.g1;for(let t=0;t<e.vertexCount;t++){const t=w.point1.g1;0!=(1&t)&&w.point2.gsmarts,0!=(2&t)&&w.point3.gsmarts,0!=(4&t)&&w.point4.gsmarts}for(let t=0;t<e.faceCount;t++)1===w.vertex2.g1&&(w.vertex1.gsmarts,w.vertex1.gsmarts),w.vertex1.gsmarts;e.faceColorsOffset=a,a+=2*e.faceCount,1===s&&(e.faceInfosOffset=n,n+=e.faceCount),255===c?(e.facePrioritiesOffset=o,o+=e.faceCount):e.facePrioritiesOffset=-c-1,1===f&&(e.faceAlphasOffset=l,l+=e.faceCount),1===u&&(e.faceLabelsOffset=h,h+=e.faceCount),1===p&&(e.vertexLabelsOffset=r,r+=e.vertexCount),e.faceTextureAxisOffset=i,i+=e.texturedFaceCount,w.metadata[t]=e}}catch(t){console.log("Error loading model index"),console.error(t)}}static unload(){w.metadata=null,w.head=null,w.face1=null,w.face2=null,w.face3=null,w.face4=null,w.face5=null,w.point1=null,w.point2=null,w.point3=null,w.point4=null,w.point5=null,w.vertex1=null,w.vertex2=null,w.axis=null,w.faceClippedX=null,w.faceNearClipped=null,w.vertexScreenX=null,w.vertexScreenY=null,w.vertexScreenZ=null,w.vertexViewSpaceX=null,w.vertexViewSpaceY=null,w.vertexViewSpaceZ=null,w.tmpDepthFaceCount=null,w.tmpDepthFaces=null,w.tmpPriorityFaceCount=null,w.tmpPriorityFaces=null,w.tmpPriority10FaceDepth=null,w.tmpPriority11FaceDepth=null,w.tmpPriorityDepthSum=null}static mulColorLightness(t,e,i){return 2==(2&i)?(e<0?e=0:e>127&&(e=127),127-e):((e=e*(127&t)>>7)<2?e=2:e>126&&(e=126),(65408&t)+e)}vertexCount=0;vertexX=null;vertexY=null;vertexZ=null;faceCount=0;faceVertexA=null;faceVertexB=null;faceVertexC=null;faceColorA=null;faceColorB=null;faceColorC=null;faceInfo=null;facePriority=null;faceAlpha=null;faceColor=null;priority=0;texturedFaceCount=0;texturedVertexA=null;texturedVertexB=null;texturedVertexC=null;minX=0;maxX=0;minZ=0;maxZ=0;radius=0;minY=0;maxY=0;maxDepth=0;minDepth=0;objRaise=0;vertexLabel=null;faceLabel=null;labelVertices=null;labelFaces=null;pickable=!1;vertexNormal=null;vertexNormalOriginal=null;constructor(t){if(null===w.head||null===w.face1||null===w.face2||null===w.face3||null===w.face4||null===w.face5||null===w.point1||null===w.point2||null===w.point3||null===w.point4||null===w.point5||null===w.vertex1||null===w.vertex2||null===w.axis)return;if(null===w.metadata)return;const e=w.metadata[t];if(void 0===e)return void console.log(`Error model:${t} not found!`);this.vertexCount=e.vertexCount,this.faceCount=e.faceCount,this.texturedFaceCount=e.texturedFaceCount,this.vertexX=new Int32Array(this.vertexCount),this.vertexY=new Int32Array(this.vertexCount),this.vertexZ=new Int32Array(this.vertexCount),this.faceVertexA=new Int32Array(this.faceCount),this.faceVertexB=new Int32Array(this.faceCount),this.faceVertexC=new Int32Array(this.faceCount),this.texturedVertexA=new Int32Array(this.texturedFaceCount),this.texturedVertexB=new Int32Array(this.texturedFaceCount),this.texturedVertexC=new Int32Array(this.texturedFaceCount),e.vertexLabelsOffset>=0&&(this.vertexLabel=new Int32Array(this.vertexCount)),e.faceInfosOffset>=0&&(this.faceInfo=new Int32Array(this.faceCount)),e.facePrioritiesOffset>=0?this.facePriority=new Int32Array(this.faceCount):this.priority=-e.facePrioritiesOffset-1,e.faceAlphasOffset>=0&&(this.faceAlpha=new Int32Array(this.faceCount)),e.faceLabelsOffset>=0&&(this.faceLabel=new Int32Array(this.faceCount)),this.faceColor=new Int32Array(this.faceCount),w.point1.pos=e.vertexFlagsOffset,w.point2.pos=e.vertexXOffset,w.point3.pos=e.vertexYOffset,w.point4.pos=e.vertexZOffset,w.point5.pos=e.vertexLabelsOffset;let i,s,r,a=0,n=0,o=0;for(let t=0;t<this.vertexCount;t++){const e=w.point1.g1;i=0,0!=(1&e)&&(i=w.point2.gsmarts),s=0,0!=(2&e)&&(s=w.point3.gsmarts),r=0,0!=(4&e)&&(r=w.point4.gsmarts),this.vertexX[t]=a+i,this.vertexY[t]=n+s,this.vertexZ[t]=o+r,a=this.vertexX[t],n=this.vertexY[t],o=this.vertexZ[t],null!=this.vertexLabel&&(this.vertexLabel[t]=w.point5.g1)}w.face1.pos=e.faceColorsOffset,w.face2.pos=e.faceInfosOffset,w.face3.pos=e.facePrioritiesOffset,w.face4.pos=e.faceAlphasOffset,w.face5.pos=e.faceLabelsOffset;for(let t=0;t<this.faceCount;t++)this.faceColor[t]=w.face1.g2,null!=this.faceInfo&&(this.faceInfo[t]=w.face2.g1),null!=this.facePriority&&(this.facePriority[t]=w.face3.g1),null!=this.faceAlpha&&(this.faceAlpha[t]=w.face4.g1),null!=this.faceLabel&&(this.faceLabel[t]=w.face5.g1);w.vertex1.pos=e.faceVerticesOffset,w.vertex2.pos=e.faceOrientationsOffset,i=0,s=0,r=0;let l=0;for(let t=0;t<this.faceCount;t++){let e=w.vertex2.g1;if(1===e)i=w.vertex1.gsmarts+l,l=i,s=w.vertex1.gsmarts+l,l=s,r=w.vertex1.gsmarts+l,l=r;else if(2===e)s=r,r=w.vertex1.gsmarts+l,l=r;else if(3===e)i=r,r=w.vertex1.gsmarts+l,l=r;else if(4===e){const t=i;i=s,s=t,r=w.vertex1.gsmarts+l,l=r}this.faceVertexA[t]=i,this.faceVertexB[t]=s,this.faceVertexC[t]=r}w.axis.pos=6*e.faceTextureAxisOffset;for(let t=0;t<this.texturedFaceCount;t++)this.texturedVertexA[t]=w.axis.g2,this.texturedVertexB[t]=w.axis.g2,this.texturedVertexC[t]=w.axis.g2}addVertex(t,e){if(null===this.vertexX||null===this.vertexY||null===this.vertexZ)return;if(null===t.vertexX||null===t.vertexY||null===t.vertexZ)return;let i=-1;const s=t.vertexX[e],r=t.vertexY[e],a=t.vertexZ[e];for(let t=0;t<this.vertexCount;t++)if(s==this.vertexX[t]&&r==this.vertexY[t]&&a==this.vertexZ[t]){i=t;break}return-1==i&&(this.vertexX[this.vertexCount]=s,this.vertexY[this.vertexCount]=r,this.vertexZ[this.vertexCount]=a,null!=this.vertexLabel&&null!=t.vertexLabel&&(this.vertexLabel[this.vertexCount]=t.vertexLabel[e]),i=this.vertexCount++),i}calculateBoundsCylinder(){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ){this.maxY=0,this.radius=0,this.minY=0;for(let t=0;t<this.vertexCount;t++){const e=this.vertexX[t],i=this.vertexY[t],s=this.vertexZ[t];-i>this.maxY&&(this.maxY=-i),i>this.minY&&(this.minY=i);const r=e*e+s*s;r>this.radius&&(this.radius=r)}this.radius=Math.trunc(Math.sqrt(this.radius)+.99),this.minDepth=Math.trunc(Math.sqrt(this.radius*this.radius+this.maxY*this.maxY)+.99),this.maxDepth=this.minDepth+Math.trunc(Math.sqrt(this.radius*this.radius+this.minY*this.minY)+.99)}}calculateBoundsY(){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ){this.maxY=0,this.minY=0;for(let t=0;t<this.vertexCount;t++){const e=this.vertexY[t];-e>this.maxY&&(this.maxY=-e),e>this.minY&&(this.minY=e)}this.minDepth=Math.trunc(Math.sqrt(this.radius*this.radius+this.maxY*this.maxY)+.99),this.maxDepth=this.minDepth+Math.trunc(Math.sqrt(this.radius*this.radius+this.minY*this.minY)+.99)}}calculateBoundsAABB(){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ){this.maxY=0,this.radius=0,this.minY=0,this.minX=999999,this.maxX=-999999,this.maxZ=-99999,this.minZ=99999;for(let t=0;t<this.vertexCount;t++){const e=this.vertexX[t],i=this.vertexY[t],s=this.vertexZ[t];e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e),s<this.minZ&&(this.minZ=s),s>this.maxZ&&(this.maxZ=s),-i>this.maxY&&(this.maxY=-i),i>this.minY&&(this.minY=i);const r=e*e+s*s;r>this.radius&&(this.radius=r)}this.radius=Math.trunc(Math.sqrt(this.radius)),this.minDepth=Math.trunc(Math.sqrt(this.radius*this.radius+this.maxY*this.maxY)),this.maxDepth=this.minDepth+Math.trunc(Math.sqrt(this.radius*this.radius+this.minY*this.minY))}}createLabelReferences(){}applyTransform(){}rotateY90(){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ)for(let t=0;t<this.vertexCount;t++){const e=this.vertexX[t];this.vertexX[t]=this.vertexZ[t],this.vertexZ[t]=-e}}rotateX(t){if(null===this.vertexX||null===this.vertexY||null===this.vertexZ)return;const e=p.sin[t],i=p.cos[t];for(let t=0;t<this.vertexCount;t++){const s=this.vertexY[t]*i-this.vertexZ[t]*e>>16;this.vertexZ[t]=this.vertexY[t]*e+this.vertexZ[t]*i>>16,this.vertexY[t]=s}}translate(t,e,i){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ)for(let s=0;s<this.vertexCount;s++)this.vertexX[s]+=t,this.vertexY[s]+=e,this.vertexZ[s]+=i}recolor(t,e){if(null!==this.faceColor)for(let i=0;i<this.faceCount;i++)this.faceColor[i]==t&&(this.faceColor[i]=e)}rotateY180(){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ&&null!==this.faceVertexA&&null!==this.faceVertexB&&null!==this.faceVertexC){for(let t=0;t<this.vertexCount;t++)this.vertexZ[t]=-this.vertexZ[t];for(let t=0;t<this.faceCount;t++){const e=this.faceVertexA[t];this.faceVertexA[t]=this.faceVertexC[t],this.faceVertexC[t]=e}}}scale(t,e,i){if(null!==this.vertexX&&null!==this.vertexY&&null!==this.vertexZ)for(let s=0;s<this.vertexCount;s++)this.vertexX[s]=this.vertexX[s]*t/128,this.vertexY[s]=this.vertexY[s]*e/128,this.vertexZ[s]=this.vertexZ[s]*i/128}calculateNormals(t,e,i,s,r,a){if(null===this.vertexX||null===this.vertexY||null===this.vertexZ||null===this.faceVertexA||null===this.faceVertexB||null===this.faceVertexC||null===this.faceColor)return;const n=e*Math.sqrt(i*i+s*s+r*r)>>8;if(null!==this.faceColorA&&null!==this.faceColorB&&null!==this.faceColorC||(this.faceColorA=new Int32Array(this.faceCount),this.faceColorB=new Int32Array(this.faceCount),this.faceColorC=new Int32Array(this.faceCount)),null===this.vertexNormal){this.vertexNormal=new Array(this.vertexCount);for(let t=0;t<this.vertexCount;t++)this.vertexNormal[t]=new m}for(let e=0;e<this.faceCount;e++){const a=this.faceVertexA[e],o=this.faceVertexB[e],l=this.faceVertexC[e],h=this.vertexX[o]-this.vertexX[a],c=this.vertexY[o]-this.vertexY[a],f=this.vertexZ[o]-this.vertexZ[a],u=this.vertexX[l]-this.vertexX[a],p=this.vertexY[l]-this.vertexY[a],d=this.vertexZ[l]-this.vertexZ[a];let x=c*d-p*f,m=f*u-d*h,g=h*p-u*c;for(;x>8192||m>8192||g>8192||x<-8192||m<-8192||g<-8192;)x>>=1,m>>=1,g>>=1;let v=Math.sqrt(x*x+m*m+g*g);if(v<=0&&(v=1),x=256*x/v,m=256*m/v,g=256*g/v,null===this.faceInfo||0==(1&this.faceInfo[e])){let t=this.vertexNormal[a];t.x+=x,t.y+=m,t.z+=g,t.w++,t=this.vertexNormal[o],t.x+=x,t.y+=m,t.z+=g,t.w++,t=this.vertexNormal[l],t.x+=x,t.y+=m,t.z+=g,t.w++}else{const a=t+(i*x+s*m+r*g)/(n+n/2);this.faceColorA[e]=w.mulColorLightness(this.faceColor[e],a,this.faceInfo[e])}}if(a)this.applyLighting(t,e,i,s,r);else{this.vertexNormalOriginal=new Array(this.vertexCount);for(let t=0;t<this.vertexCount;t++){const e=this.vertexNormal[t],i=new m;i.x=e.x,i.y=e.y,i.z=e.z,i.w=e.w,this.vertexNormalOriginal[t]=i}}a?this.calculateBoundsCylinder():this.calculateBoundsAABB()}applyLighting(t,e,i,s,r){if(null!==this.faceVertexA&&null!==this.faceVertexB&&null!==this.faceVertexC&&null!==this.faceColor&&null!==this.vertexNormal&&null!==this.faceColorA&&null!==this.faceColorB&&null!==this.faceColorC){for(let a=0;a<this.faceCount;a++){const n=this.faceVertexA[a],o=this.faceVertexB[a],l=this.faceVertexC[a];if(null===this.faceInfo){const h=this.faceColor[a];let c=this.vertexNormal[n],f=t+(i*c.x+s*c.y+r*c.z)/(e*c.w);this.faceColorA[a]=w.mulColorLightness(h,f,0),c=this.vertexNormal[o],f=t+(i*c.x+s*c.y+r*c.z)/(e*c.w),this.faceColorB[a]=w.mulColorLightness(h,f,0),c=this.vertexNormal[l],f=t+(i*c.x+s*c.y+r*c.z)/(e*c.w),this.faceColorC[a]=w.mulColorLightness(h,f,0)}else if(0==(1&this.faceInfo[a])){const h=this.faceColor[a],c=this.faceInfo[a];let f=this.vertexNormal[n],u=t+(i*f.x+s*f.y+r*f.z)/(e*f.w);this.faceColorA[a]=w.mulColorLightness(h,u,c),f=this.vertexNormal[o],u=t+(i*f.x+s*f.y+r*f.z)/(e*f.w),this.faceColorB[a]=w.mulColorLightness(h,u,c),f=this.vertexNormal[l],u=t+(i*f.x+s*f.y+r*f.z)/(e*f.w),this.faceColorC[a]=w.mulColorLightness(h,u,c)}}if(this.vertexNormal=null,this.vertexNormalOriginal=null,this.vertexLabel=null,this.faceLabel=null,null!==this.faceInfo)for(let t=0;t<this.faceCount;t++)if(2==(2&this.faceInfo[t]))return;this.faceColor=null}}drawSimple(t,e,i,s,r,a,n){if(null===this.vertexX||null===this.vertexY||null===this.vertexZ)return;if(null===w.vertexScreenX||null===w.vertexScreenY||null===w.vertexScreenZ)return;if(null===w.vertexViewSpaceX||null===w.vertexViewSpaceY||null===w.vertexViewSpaceZ)return;const o=p.sin[t],l=p.cos[t],h=p.sin[e],c=p.cos[e],f=p.sin[i],u=p.cos[i],d=p.sin[s],x=p.cos[s],m=a*d+n*x>>16;for(let s=0;s<this.vertexCount;s++){let g,v=this.vertexX[s],y=this.vertexY[s],C=this.vertexZ[s];0!==i&&(g=y*f+v*u>>16,y=y*u-v*f>>16,v=g),0!==t&&(g=y*l-C*o>>16,C=y*o+C*l>>16,y=g),0!==e&&(g=C*h+v*c>>16,C=C*c-v*h>>16,v=g),v+=r,y+=a,C+=n,g=y*x-C*d>>16,C=y*d+C*x>>16,y=g,w.vertexScreenX[s]=p.centerX+(v<<9)/C,w.vertexScreenY[s]=p.centerY+(y<<9)/C,w.vertexScreenZ[s]=C-m,this.texturedFaceCount>0&&(w.vertexViewSpaceX[s]=v,w.vertexViewSpaceY[s]=y,w.vertexViewSpaceZ[s]=C)}this.draw2(!1,!1,0)}draw(t,e,i,s,r,a,n,o,l){}draw2(t,e,i){if(null===w.vertexScreenX||null===w.vertexScreenY||null===w.vertexScreenZ)return;if(null===w.vertexViewSpaceX||null===w.vertexViewSpaceY||null===w.vertexViewSpaceZ)return;if(null===w.faceNearClipped||null===w.faceClippedX)return;if(null===w.tmpDepthFaceCount||null===w.tmpDepthFaces||null===w.tmpPriorityFaces||null===w.tmpPriorityFaceCount||null===w.tmpPriorityDepthSum||null===w.tmpPriority10FaceDepth||null===w.tmpPriority11FaceDepth)return;if(null===this.faceVertexA||null===this.faceVertexB||null===this.faceVertexC)return;for(let t=0;t<this.maxDepth;t++)w.tmpDepthFaceCount[t]=0;for(let s=0;s<this.faceCount;s++){if(this.faceInfo&&-1==this.faceInfo[s])continue;const r=this.faceVertexA[s],a=this.faceVertexB[s],n=this.faceVertexC[s],o=w.vertexScreenX[r],l=w.vertexScreenX[a],h=w.vertexScreenX[n];if(!t||-5e3!=o&&-5e3!=l&&-5e3!=h){e&&this.pointWithinTriangle(w.mouseX,w.mouseZ,w.vertexScreenY[r],w.vertexScreenY[a],w.vertexScreenY[n],o,l,h)&&(w.pickedBitsets[w.pickedCount++]=i,e=!1);const t=o-l,c=w.vertexScreenY[r]-w.vertexScreenY[a],u=h-l;if(t*(w.vertexScreenY[n]-w.vertexScreenY[a])-c*u<=0)continue;w.faceNearClipped[s]=!1,w.faceClippedX[s]=o<0||l<0||h<0||o>f.boundX||l>f.boundX||h>f.boundX;const p=Math.trunc((w.vertexScreenZ[r]+w.vertexScreenZ[a]+w.vertexScreenZ[n])/3+this.minDepth);w.tmpDepthFaces[p][w.tmpDepthFaceCount[p]++]=s}else{w.faceNearClipped[s]=!0;const t=Math.trunc((w.vertexScreenZ[r]+w.vertexScreenZ[a]+w.vertexScreenZ[n])/3+this.minDepth);w.tmpDepthFaces[t][w.tmpDepthFaceCount[t]++]=s}}if(null==this.facePriority){for(let t=this.maxDepth-1;t>=0;t--){const e=w.tmpDepthFaceCount[t];if(e<=0)continue;const i=w.tmpDepthFaces[t];for(let t=0;t<e;t++)this.drawFace(i[t])}return}for(let t=0;t<12;t++)w.tmpPriorityFaceCount[t]=0,w.tmpPriorityDepthSum[t]=0;for(let t=this.maxDepth-1;t>=0;t--){const e=w.tmpDepthFaceCount[t];if(e>0){const i=w.tmpDepthFaces[t];for(let s=0;s<e;s++){const e=i[s],r=this.facePriority[e],a=w.tmpPriorityFaceCount[r]++;w.tmpPriorityFaces[r][a]=e,r<10?w.tmpPriorityDepthSum[r]+=t:10==r?w.tmpPriority10FaceDepth[a]=t:w.tmpPriority11FaceDepth[a]=t}}}let s=0;(w.tmpPriorityFaceCount[1]>0||w.tmpPriorityFaceCount[2]>0)&&(s=Math.trunc((w.tmpPriorityDepthSum[1]+w.tmpPriorityDepthSum[2])/(w.tmpPriorityFaceCount[1]+w.tmpPriorityFaceCount[2])));let r=0;(w.tmpPriorityFaceCount[3]>0||w.tmpPriorityFaceCount[4]>0)&&(r=Math.trunc((w.tmpPriorityDepthSum[3]+w.tmpPriorityDepthSum[4])/(w.tmpPriorityFaceCount[3]+w.tmpPriorityFaceCount[4])));let a=0;(w.tmpPriorityFaceCount[6]>0||w.tmpPriorityFaceCount[8]>0)&&(a=Math.trunc((w.tmpPriorityDepthSum[6]+w.tmpPriorityDepthSum[8])/(w.tmpPriorityFaceCount[6]+w.tmpPriorityFaceCount[8])));let n,o=0,l=w.tmpPriorityFaceCount[10],h=w.tmpPriorityFaces[10],c=w.tmpPriority10FaceDepth;o==l&&(o=0,l=w.tmpPriorityFaceCount[11],h=w.tmpPriorityFaces[11],c=w.tmpPriority11FaceDepth),n=o<l?c[o]:-1e3;for(let t=0;t<10;t++){for(;0==t&&n>s;)this.drawFace(h[o++]),o==l&&h!=w.tmpPriorityFaces[11]&&(o=0,l=w.tmpPriorityFaceCount[11],h=w.tmpPriorityFaces[11],c=w.tmpPriority11FaceDepth),n=o<l?c[o]:-1e3;for(;3==t&&n>r;)this.drawFace(h[o++]),o==l&&h!=w.tmpPriorityFaces[11]&&(o=0,l=w.tmpPriorityFaceCount[11],h=w.tmpPriorityFaces[11],c=w.tmpPriority11FaceDepth),n=o<l?c[o]:-1e3;for(;5==t&&n>a;)this.drawFace(h[o++]),o==l&&h!=w.tmpPriorityFaces[11]&&(o=0,l=w.tmpPriorityFaceCount[11],h=w.tmpPriorityFaces[11],c=w.tmpPriority11FaceDepth),n=o<l?c[o]:-1e3;const e=w.tmpPriorityFaceCount[t],i=w.tmpPriorityFaces[t];for(let t=0;t<e;t++)this.drawFace(i[t])}for(;-1e3!=n;)this.drawFace(h[o++]),o==l&&h!=w.tmpPriorityFaces[11]&&(o=0,h=w.tmpPriorityFaces[11],l=w.tmpPriorityFaceCount[11],c=w.tmpPriority11FaceDepth),n=o<l?c[o]:-1e3}drawFace(t){if(null!==w.faceNearClipped&&w.faceNearClipped[t])return void this.drawNearClippedFace(t);if(null===this.faceVertexA||null===this.faceVertexB||null===this.faceVertexC)return;if(null===w.faceClippedX)return;if(null===w.vertexScreenX||null===w.vertexScreenY||null===w.vertexScreenZ)return;if(null===w.vertexViewSpaceX||null===w.vertexViewSpaceY||null===w.vertexViewSpaceZ)return;const e=this.faceVertexA[t],i=this.faceVertexB[t],s=this.faceVertexC[t];let r;p.clipX=w.faceClippedX[t],null===this.faceAlpha?p.alpha=0:p.alpha=this.faceAlpha[t],r=null===this.faceInfo?0:3&this.faceInfo[t],0===r&&null!==this.faceColorA&&null!==this.faceColorB&&null!==this.faceColorC?p.fillGouraudTriangle(w.vertexScreenX[e],w.vertexScreenX[i],w.vertexScreenX[s],w.vertexScreenY[e],w.vertexScreenY[i],w.vertexScreenY[s],this.faceColorA[t],this.faceColorB[t],this.faceColorC[t]):1===r||2===r&&null!==this.faceInfo&&null!==this.texturedVertexA&&null!==this.texturedVertexB&&null!==this.texturedVertexC||3===r&&null!==this.faceInfo&&null!==this.texturedVertexA&&null!==this.texturedVertexB&&this.texturedVertexC}drawNearClippedFace(t){}pointWithinTriangle(t,e,i,s,r,a,n,o){return!(e<a&&e<n&&e<o||e>a&&e>n&&e>o||t<i&&t<s&&t<r||!(t<=i||t<=s||t<=r))}}class g{static unpack(t){}}class v{static unpack(t){}}const y=[0,79764919,159529838,222504665,319059676,398814059,445009330,507990021,638119352,583659535,797628118,726387553,890018660,835552979,1015980042,944750013,1276238704,1221641927,1167319070,1095957929,1595256236,1540665371,1452775106,1381403509,1780037320,1859660671,1671105958,1733955601,2031960084,2111593891,1889500026,1952343757,2552477408,2632100695,2443283854,2506133561,2334638140,2414271883,2191915858,2254759653,3190512472,3135915759,3081330742,3009969537,2905550212,2850959411,2762807018,2691435357,3560074640,3505614887,3719321342,3648080713,3342211916,3287746299,3467911202,3396681109,4063920168,4143685023,4223187782,4286162673,3779000052,3858754371,3904687514,3967668269,881225847,809987520,1023691545,969234094,662832811,591600412,771767749,717299826,311336399,374308984,453813921,533576470,25881363,88864420,134795389,214552010,2023205639,2086057648,1897238633,1976864222,1804852699,1867694188,1645340341,1724971778,1587496639,1516133128,1461550545,1406951526,1302016099,1230646740,1142491917,1087903418,2896545431,2825181984,2770861561,2716262478,3215044683,3143675388,3055782693,3001194130,2326604591,2389456536,2200899649,2280525302,2578013683,2640855108,2418763421,2498394922,3769900519,3832873040,3912640137,3992402750,4088425275,4151408268,4197601365,4277358050,3334271071,3263032808,3476998961,3422541446,3585640067,3514407732,3694837229,3640369242,1762451694,1842216281,1619975040,1682949687,2047383090,2127137669,1938468188,2001449195,1325665622,1271206113,1183200824,1111960463,1543535498,1489069629,1434599652,1363369299,622672798,568075817,748617968,677256519,907627842,853037301,1067152940,995781531,51762726,131386257,177728840,240578815,269590778,349224269,429104020,491947555,4046411278,4126034873,4172115296,4234965207,3794477266,3874110821,3953728444,4016571915,3609705398,3555108353,3735388376,3664026991,3290680682,3236090077,3449943556,3378572211,3174993278,3120533705,3032266256,2961025959,2923101090,2868635157,2813903052,2742672763,2604032198,2683796849,2461293480,2524268063,2284983834,2364738477,2175806836,2238787779,1569362073,1498123566,1409854455,1355396672,1317987909,1246755826,1192025387,1137557660,2072149281,2135122070,1912620623,1992383480,1753615357,1816598090,1627664531,1707420964,295390185,358241886,404320391,483945776,43990325,106832002,186451547,266083308,932423249,861060070,1041341759,986742920,613929101,542559546,756411363,701822548,3316196985,3244833742,3425377559,3370778784,3601682597,3530312978,3744426955,3689838204,3819031489,3881883254,3928223919,4007849240,4037393693,4100235434,4180117107,4259748804,2310601993,2373574846,2151335527,2231098320,2596047829,2659030626,2470359227,2550115596,2947551409,2876312838,2788305887,2733848168,3165939309,3094707162,3040238851,2985771188],C=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215,33554431,67108863,134217727,268435455,536870911,1073741823,-2147483648];function b(t){const e=[];for(let i=0;i<t.length;i+=1)e.push([i,t[i]]);e.push([t.length,-1]);const i=[];let s=e[0][0],r=e[0][1];for(let t=0;t<e.length;t+=1){const a=e[t][0],n=e[t][1];if(r)for(let t=s;t<a;t+=1)i.push({code:t,bits:r,symbol:void 0});if(s=a,r=n,-1===n)break}i.sort(((t,e)=>t.bits-e.bits||t.code-e.code));let a=0,n=-1;const o=[];let l;for(let t=0;t<i.length;t+=1){const e=i[t];n+=1,e.bits!==a&&(n<<=e.bits-a,a=e.bits,l=o[a]={}),e.symbol=n,l[n]=e}return{table:i,fastAccess:o}}function A(t,e){if(e<0||e>=t.length)throw RangeError("Out of bound");const i=t.slice();t.sort(((t,e)=>t-e));const s={};for(let e=t.length-1;e>=0;e-=1)s[t[e]]=e;const r=[];for(let e=0;e<t.length;e+=1)r.push(s[i[e]]++);let a;const n=t[a=e],o=[];for(let e=1;e<t.length;e+=1){const e=t[a=r[a]];void 0===e?o.push(255):o.push(e)}return o.push(n),o.reverse(),o}const S=async t=>new Promise((e=>setTimeout(e,t))),P=async t=>new Uint8Array(await(await fetch(t)).arrayBuffer()),k=(t,e=!0,i=!0)=>{if(e){let e=Uint8Array.from(["B".charCodeAt(0),"Z".charCodeAt(0),"h".charCodeAt(0),"1".charCodeAt(0)]);if(i){let i=t;(t=new Uint8Array(e.length+t.length)).set(i,e.length)}t.set(e,0)}return function(t,e=!1){let i=0,s=0,r=0;const a=e=>{if(e>=32){const t=e>>1;return a(t)*(1<<t)+a(e-t)}for(;r<e;)s=(s<<8)+t[i],i+=1,r+=8;const n=C[e],o=s>>r-e&n;return r-=e,s&=~(n<<r),o};if(16986!==a(16))throw new Error("Invalid magic");if(104!==a(8))throw new Error("Invalid method");let n=a(8);if(!(n>=49&&n<=57))throw new Error("Invalid blocksize");n-=48;let o=new Uint8Array(1.5*t.length),l=0,h=-1;for(;;){const n=a(48),c=0|a(32);if(54156738319193!==n){if(25779555029136===n){a(7&r);break}throw new Error("Invalid bz2 blocktype")}{if(a(1))throw new Error("do not support randomised");const n=a(24),f=[],u=a(16);for(let t=32768;t>0;t>>=1){if(!(u&t)){for(let t=0;t<16;t+=1)f.push(!1);continue}const e=a(16);for(let t=32768;t>0;t>>=1)f.push(!!(e&t))}const p=a(3);if(p<2||p>6)throw new Error("Invalid number of huffman groups");const d=a(15),x=[],m=Array.from({length:p},((t,e)=>e));for(let t=0;t<d;t+=1){let t=0;for(;a(1);)if(t+=1,t>=p)throw new Error("MTF table out of range");const e=m[t];for(let e=t;e>0;m[e]=m[--e]);x.push(e),m[0]=e}const w=f.reduce(((t,e)=>t+e),0)+2,g=[];for(let t=0;t<p;t+=1){let t=a(5);const e=[];for(let i=0;i<w;i+=1){if(t<0||t>20)throw new Error("Huffman group length outside range");for(;a(1);)t-=2*a(1)-1;e.push(t)}g.push(b(e))}const v=[];for(let t=0;t<f.length-1;t+=1)f[t]&&v.push(t);let S,P,k=0,Y=0,F=0,X=0;const I=[];for(;;){k-=1,k<=0&&(k=50,Y<=x.length&&(S=g[x[Y]],Y+=1));for(const e in S.fastAccess)if(Object.prototype.hasOwnProperty.call(S.fastAccess,e)&&(r<e&&(s=(s<<8)+t[i],i+=1,r+=8),P=S.fastAccess[e][s>>r-e],P)){s&=C[r-=e],P=P.code;break}if(P>=0&&P<=1)0===F&&(X=1),F+=X<<P,X<<=1;else{{const t=v[0];for(;F>0;F-=1)I.push(t)}if(P===w-1)break;{const t=v[P-1];for(let t=P-1;t>0;v[t]=v[--t]);v[0]=t,I.push(t)}}}const O=A(I,n);let V=0;for(;V<O.length;){const t=O[V];let i=1;if(V<O.length-4&&O[V+1]===t&&O[V+2]===t&&O[V+3]===t?(i=O[V+4]+4,V+=5):V+=1,l+i>=o.length){const t=o;o=new Uint8Array(2*t.length),o.set(t)}for(let s=0;s<i;s+=1)e&&(h=h<<8^y[255&(h>>24^t)]),o[l]=t,l+=1}if(e){const t=-1^h;if(t!==c)throw new Error(`CRC mismatch: ${t} !== ${c}`);h=-1}}}return o.subarray(0,l)}(t)};class Y{static loadUrl=async t=>new Y(await P(t));static genHash=t=>{let e=0;t=t.toUpperCase();for(let i=0;i<t.length;i++)e=61*e+t.charCodeAt(i)-32>>>0;return e};buffer;compressedWhole;fileCount;fileHash;fileSizeInflated;fileSizeDeflated;fileOffset;constructor(t){const e=new s(t),i=e.g3;let r;if(i==e.g3)r=e,this.compressedWhole=!1;else{const t=e.gdata(e.pos,i);r=new s(new Uint8Array(k(t))),this.compressedWhole=!0}this.buffer=r,this.fileCount=r.g2,this.fileHash=[],this.fileSizeInflated=[],this.fileSizeDeflated=[],this.fileOffset=[];let a=r.pos+10*this.fileCount;for(let t=0;t<this.fileCount;t++)this.fileHash.push(r.g4),this.fileSizeInflated.push(r.g3),this.fileSizeDeflated.push(r.g3),this.fileOffset.push(a),a+=this.fileSizeDeflated[t]}read=t=>{const e=Y.genHash(t),i=this.fileHash.indexOf(e);return-1==i?null:this.readIndex(i)};readIndex=t=>{if(t<0||t>=this.fileCount)return null;if(this.compressedWhole)return this.buffer.gdata(this.fileOffset[t],this.fileOffset[t]+this.fileSizeDeflated[t]);{const e=this.buffer.gdata(this.fileOffset[t],this.fileOffset[t]+this.fileSizeDeflated[t]);return k(e)}}}class F{static unpack(t){}}class X{canvas;ctx;image;pixels;width;height;constructor(t,e,i){const s=t.getContext("2d");if(!s)throw new Error("Canvas 2d not found!!!!!!!!");this.canvas=t,this.ctx=s,this.image=s.getImageData(0,0,e,i),this.pixels=new Uint32Array(e*i),this.width=e,this.height=i,this.bind()}clear=()=>{this.pixels.fill(0)};bind=()=>{f.prepare(this.pixels,this.width,this.height)};draw=(t,e)=>{this.#t(),this.ctx.putImageData(this.image,t,e)};#t=()=>{const t=this.image.data;for(let e=0;e<this.pixels.length;e++){const i=this.pixels[e],s=4*e;t[s+0]=i>>16&255,t[s+1]=i>>8&255,t[s+2]=i>>0&255,t[s+3]=255}}}class I{static getParameter(t){return new URLSearchParams(window.location.search).get(t)??""}static setParameter(t,e){const i=new URL(window.location.toString());i.searchParams.set(t,e),window.history.pushState(null,"",i.toString())}canvas;ctx;drawArea=null;state=0;deltime=20;mindel=1;otim=[];fps=0;fpos=0;frameTime=[];redrawScreen=!0;resizeToFit=!1;idleCycles=0;mouseButton=0;mouseX=0;mouseY=0;mouseClickButton=0;mouseClickX=0;mouseClickY=0;actionKey=[];keyQueue=[];keyQueueReadPos=0;keyQueueWritePos=0;constructor(t=!1){const e=document.getElementById("canvas");if(!e)throw new Error("Canvas not found!!!!!!!!");const i=e.getContext("2d");if(!i)throw new Error("Canvas 2d not found!!!!!!!!");this.canvas=e,this.ctx=i,this.resizeToFit=t,this.resizeToFit?this.resize(window.innerWidth,window.innerHeight):this.resize(e.width,e.height)}get width(){return this.canvas.width}get height(){return this.canvas.height}resize(t,e){const i=this.canvas;i.width=t,i.height=e,this.drawArea=new X(i,t,e),p.init2D()}async run(){window.addEventListener("resize",(()=>{this.resizeToFit&&this.resize(window.innerWidth,window.innerHeight)}),!1),window.addEventListener("keydown",this.keyDown),window.addEventListener("keyup",this.keyUp),window.addEventListener("mousedown",this.mousePressed),await this.showProgress(0,"Loading..."),await this.load();for(let t=0;t<10;t++)this.otim[t]=Date.now();let t,e=0,i=256,s=1,r=0;for(;this.state>=0;){if(this.state>0&&(this.state--,0===this.state))return void this.shutdown();const a=i,n=s;i=300,s=1,t=Date.now();const o=this.otim[e];if(0===o?(i=a,s=n):t>o&&(i=Math.trunc(2560*this.deltime/(t-o))),i<25?i=25:i>256&&(i=256,s=Math.trunc(this.deltime-(t-o)/10)),this.otim[e]=t,e=(e+1)%10,s>1)for(let t=0;t<10;t++)0!==this.otim[t]&&(this.otim[t]+=s);for(s<this.mindel&&(s=this.mindel),await S(s);r<256;)this.update(),this.mouseClickButton=0,this.keyQueueReadPos=this.keyQueueWritePos,r+=i;r&=255,this.deltime>0&&(this.fps=Math.trunc(1e3*i/(256*this.deltime)));const l=performance.now();await this.draw(),this.frameTime[this.fpos]=(performance.now()-l)/1e3,this.fpos=(this.fpos+1)%this.frameTime.length,console.log(`${this.fps} fps`),console.log(`${this.ms.toFixed(4)} ms`)}-1==this.state&&this.shutdown()}shutdown(){this.state=-2,this.unload()}setLoopRate(t){this.deltime=1e3/t}start(){this.state>=0&&(this.state=0)}stop(){this.state>=0&&(this.state=4e3/this.deltime)}destroy(){this.state=-1}async load(){}update(){}unload(){}async draw(){}refresh(){}async showProgress(t,e){const i=this.ctx,s=this.width,r=this.height;this.redrawScreen&&(i.fillStyle="black",i.clearRect(0,0,s,r),this.redrawScreen=!1);let a=r/2-18;i.fillStyle="rgb(140, 17, 17)",i.rect(s/2-152,a,304,34),i.fillRect(s/2-150,a+2,3*t,30),i.fillStyle="black",i.fillRect(s/2-150+3*t,a+2,300-3*t,30),i.font="bold 13px helvetica, sans-serif",i.textAlign="center",i.fillStyle="white",i.fillText(e,s/2,a+22),await S(5)}keyDown=t=>{this.idleCycles=0;let e=t.keyCode,i=t.key.charCodeAt(0);83!==i&&(i<30&&(i=0),37==e?i=1:39==e?i=2:38==e?i=3:40==e?i=4:17==e?i=5:8==e||127==e?i=8:9==e?i=9:10==e?i=10:e>=112&&e<=123?i=e+1008-112:36==e?i=1e3:35==e?i=1001:33==e?i=1002:34==e&&(i=1003),i>0&&i<128&&(this.actionKey[i]=1),i>4&&(this.keyQueue[this.keyQueueWritePos]=i,this.keyQueueWritePos=this.keyQueueWritePos+1&127))};keyUp=t=>{this.idleCycles=0;let e=t.key.charCodeAt(0);"ArrowLeft"==t.key?e=1:"ArrowRight"==t.key?e=2:"ArrowUp"==t.key?e=3:"ArrowDown"==t.key&&(e=4),this.actionKey[e]=0};pollKey(){let t=-1;return this.keyQueueWritePos!=this.keyQueueReadPos&&(t=this.keyQueue[this.keyQueueReadPos],this.keyQueueReadPos=this.keyQueueReadPos+1&127),t}mousePressed=t=>{let e=t.x,i=t.y;const{top:s,left:r}=this.getInsets;e-=r,i-=s,this.idleCycles=0,this.mouseClickX=e,this.mouseClickY=i,2===t.buttons?(this.mouseClickButton=2,this.mouseButton=2):1===t.buttons&&(this.mouseClickButton=1,this.mouseButton=1)};get getInsets(){const t=this.canvas.getBoundingClientRect(),e=window.getComputedStyle(this.canvas),i=parseFloat(e.paddingLeft||"0"),s=parseFloat(e.paddingTop||"0"),r=parseFloat(e.borderLeftWidth||"0"),a=parseFloat(e.borderTopWidth||"0"),n=t.left+r+i;return{top:t.top+a+s,left:n}}get ms(){const t=this.frameTime.length;let e=0;for(let i=0;i<t;i++)e+=this.frameTime[i];return e/t}}class O extends I{static HOST="https://w2.225.2004scape.org";static REPO="https://raw.githubusercontent.com/2004scape/Server/main";alreadyStarted=!1;errorStarted=!1;errorLoading=!1;errorHost=!1;loopCycle=0;ingame=!1;archiveChecksums=[];fontPlain11=null;fontPlain12=null;fontBold12=null;fontQuill8=null;packfiles=[];inputSpeedMultiplier=2;model={id:parseInt(I.getParameter("model"))||0,pitch:parseInt(I.getParameter("x"))||0,yaw:parseInt(I.getParameter("y"))||0,roll:parseInt(I.getParameter("z"))||0,built:null};camera={x:parseInt(I.getParameter("eyeX"))||0,y:parseInt(I.getParameter("eyeY"))||0,z:parseInt(I.getParameter("eyeZ"))||420,pitch:parseInt(I.getParameter("eyePitch"))||0};async loadPack(t){const e=new Map,i=await(async t=>(await fetch(t)).text())(t),s=i.split("\n");for(let t=0;t<s.length;t++){const i=s[t],r=i.indexOf("=");if(-1===r)continue;const a=parseInt(i.substring(0,r)),n=i.substring(r+1);e.set(a,n)}return e}load=async()=>{if(this.alreadyStarted)this.errorStarted=!0;else{this.alreadyStarted=!0;try{await this.showProgress(10,"Connecting to fileserver");let f=new s(await P(`${O.HOST}/crc`));for(let t=0;t<9;t++)this.archiveChecksums[t]=f.g4;const u=await this.loadArchive("title","title screen",this.archiveChecksums[1],10);this.fontPlain11=d.fromArchive(u,"p11"),this.fontPlain12=d.fromArchive(u,"p12"),this.fontBold12=d.fromArchive(u,"b12"),this.fontQuill8=d.fromArchive(u,"q8");let x=await this.loadArchive("config","config",this.archiveChecksums[2],15),m=await this.loadArchive("interface","interface",this.archiveChecksums[3],20),y=(await this.loadArchive("media","2d graphics",this.archiveChecksums[4],30),await this.loadArchive("models","3d graphics",this.archiveChecksums[5],40)),C=await this.loadArchive("textures","textures",this.archiveChecksums[6],60),b=await this.loadArchive("wordenc","chat system",this.archiveChecksums[7],65),A=await this.loadArchive("sounds","sound effects",this.archiveChecksums[8],70);await this.showProgress(75,"Unpacking media"),await this.showProgress(80,"Unpacking textures"),p.unpackTextures(C),p.setBrightness(.8),await this.showProgress(83,"Unpacking models"),w.unpack(y),g.unpack(y),v.unpack(y),await this.showProgress(86,"Unpacking config"),e.unpack(x),i.unpack(x),r.unpack(x),a.unpack(x),n.unpack(x),o.unpack(x),l.unpack(x),h.unpack(x),await this.showProgress(90,"Unpacking sounds"),t.unpack(A),await this.showProgress(92,"Unpacking interfaces"),c.unpack(m),await this.showProgress(97,"Preparing game engine"),F.unpack(b),await this.showProgress(100,"Getting ready to start..."),this.drawArea?.bind(),p.init2D(),await this.showModels()}catch(t){this.errorLoading=!0,console.error(t)}}};update=()=>{this.errorStarted||this.errorLoading||this.errorHost||this.loopCycle++};draw=async()=>{this.errorStarted||this.errorLoading||this.errorHost?this.drawErrorScreen():(f.clear(),f.fillRect(0,0,this.width,this.height,0),null===this.model.built&&(this.model.built=new w(this.model.id)),this.model.built.calculateNormals(64,850,-30,-50,-30,!0),this.model.built.drawSimple(this.model.pitch,this.model.yaw,this.model.roll,this.camera.pitch,this.camera.x,this.camera.y,this.camera.z),this.fontBold12?.drawRight(this.width-1,this.fontBold12.fontHeight,`FPS: ${this.fps}`,16776960),this.fontBold12?.draw(1,this.fontBold12.fontHeight,`ID: ${this.model.id}`,16776960),this.drawArea?.draw(0,0))};showProgress=async(t,e)=>{console.log(`${t}%: ${e}`),await super.showProgress(t,e)};async loadArchive(t,e,i,s){await this.showProgress(s,`Requesting ${e}`);let r=await Y.loadUrl(`${O.HOST}/${t}${i}`);return await this.showProgress(s,`Loading ${e} - 100%`),r}drawErrorScreen(){if(this.ctx&&this.canvas){if(this.ctx.fillStyle="black",this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.setLoopRate(1),this.errorLoading){this.ctx.font="bold 16px helvetica, sans-serif",this.ctx.textAlign="left",this.ctx.fillStyle="yellow";let t=35;this.ctx.fillText("Sorry, an error has occured whilst loading RuneScape",30,t),t+=50,this.ctx.fillStyle="white",this.ctx.fillText("To fix this try the following (in order):",30,t),t+=50,this.ctx.font="bold 12px helvetica, sans-serif",this.ctx.fillText("1: Try closing ALL open web-browser windows, and reloading",30,t),t+=30,this.ctx.fillText("2: Try clearing your web-browsers cache from tools->internet options",30,t),t+=30,this.ctx.fillText("3: Try using a different game-world",30,t),t+=30,this.ctx.fillText("4: Try rebooting your computer",30,t),t+=30,this.ctx.fillText("5: Try selecting a different version of Java from the play-game menu",30,t)}if(this.errorHost&&(this.ctx.font="bold 20px helvetica, sans-serif",this.ctx.textAlign="left",this.ctx.fillStyle="white",this.ctx.fillText("Error - unable to load game!",50,50),this.ctx.fillText("To play RuneScape make sure you play from",50,100),this.ctx.fillText("https://2004scape.org",50,150)),this.errorStarted){this.ctx.font="bold 13px helvetica, sans-serif",this.ctx.textAlign="left",this.ctx.fillStyle="yellow";let t=35;this.ctx.fillText("Error a copy of RuneScape already appears to be loaded",30,t),t+=50,this.ctx.fillStyle="white",this.ctx.fillText("To fix this try the following (in order):",30,t),t+=50,this.ctx.font="bold 12px helvetica, sans-serif",this.ctx.fillText("1: Try closing ALL open web-browser windows, and reloading",30,t),t+=30,this.ctx.fillText("2: Try rebooting your computer, and reloading",30,t)}}}async showModels(){this.packfiles[0]=await this.loadPack(`${O.REPO}/data/pack/model.pack`);const t=document.getElementById("leftPanel");if(t){t.innerHTML="";{const i=document.createElement("input");i.type="search",i.placeholder="Search",i.oninput=()=>{const t=i.value.toLowerCase().replaceAll(" ","_");for(let i=0;i<e.children.length;i++){const s=e.children[i];s.id.indexOf(t)>-1?s.style.display="":s.style.display="none"}},t.appendChild(i)}const e=document.createElement("ul");e.className="list-group",t.appendChild(e);for(const[t,i]of this.packfiles[0]){const s=document.createElement("li");s.id=i,s.className="list-group-item",0==t&&(s.className+=" active"),s.innerText=i,s.onclick=()=>{const i=e.querySelector(".active");i&&(i.className="list-group-item"),s.className="list-group-item active",this.model.id=t,this.model.built=new w(this.model.id)},e.appendChild(s)}}}}(new O).run().then((()=>{}))})();